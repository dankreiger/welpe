name: Github Packages
on:
  push:
    branches: [main]
jobs:
  install:
    name: 'Install dependencies'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: restore lerna
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}

      - uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install Yarn
        run: npm install -g yarn

      - name: Install
        run: yarn

  test:
    name: 'Test'
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install Yarn
        run: npm install -g yarn

      - name: Test packages
        run: yarn test

  lint:
    name: 'Lint'
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install Yarn
        run: npm install -g yarn

      - name: Lint packages
        run: yarn lint

  build:
    name: 'Build library'
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install Yarn
        run: npm install -g yarn

      - name: Build and generate docs
        run: yarn api-docs

      - name: Git config
        if: ${{ success() }}
        run: git config --global user.email "${{ secrets.GIT_EMAIL }}" && git config --global user.name "${{ secrets.GIT_USERNAME }}"

      - name: Push docs
        run: |
          git add .
          git commit -m "docs: update api docs [skip ci]"
          git push              

  publish:
    name: 'Release version GH Packages'
    if: ${{ !env.ACT }}
    runs-on: ubuntu-latest
    needs: [test, lint, build, commit_docs]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Yarn
        run: npm install -g yarn

      # Setup .npmrc file to publish to GitHub Packages
      - name: Setup configuration for GH Packages
        uses: actions/setup-node@v2
        with:
          registry-url: 'https://npm.pkg.github.com'
          scope: '@graffft'

      # Publish to GitHub Packages
      - name: Publish packages
        if: ${{ success() }}
        run: yarn prod-publish
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.GH_TOKEN }}
